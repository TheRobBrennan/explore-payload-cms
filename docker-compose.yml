services:
  # Main Payload CMS application with PostgreSQL
  payload-postgres:
    image: node:20-alpine
    container_name: payload-postgres
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${PAYLOAD_CMS_POSTGRES_APP_PORT:-3002}:3000"
    volumes:
      - ./apps/payload-postgres:/app
      - payload_postgres_node_modules:/app/node_modules
      - payload_postgres_media:/app/public/media
    environment:
      PAYLOAD_SECRET: ${PAYLOAD_SECRET:-payload-cms-secret-key}
      DATABASE_URI: ${DATABASE_URI:-postgres://postgres:postgres-password@postgres:5432/payloadcms}
      NEXT_PUBLIC_SERVER_URL: ${NEXT_PUBLIC_SERVER_URL_POSTGRES_APP:-http://localhost:3002}
      PREVIEW_SECRET: ${PREVIEW_SECRET:-payload-cms-preview-secret}
      NODE_ENV: development
    command: sh -c "npm install -g pnpm && pnpm install && pnpm dev"
    networks:
      - payload-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Example Payload CMS with MongoDB
  payload-mongo:
    image: node:20-alpine
    container_name: payload-mongo
    working_dir: /app
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - "${PAYLOAD_CMS_MONGO_APP_PORT:-3001}:3000"
    volumes:
      - ./apps/payload-mongo:/app
      - payload_mongo_node_modules:/app/node_modules
      - payload_mongo_media:/app/public/media
    environment:
      PAYLOAD_SECRET: ${PAYLOAD_SECRET:-payload-cms-secret-key}
      MONGODB_URI: ${MONGODB_URI:-mongodb://mongo:mongo-password@mongo:27017/payloadcms?authSource=admin}
      NEXT_PUBLIC_SERVER_URL: ${NEXT_PUBLIC_SERVER_URL_MONGO_APP:-http://localhost:3001}
      NODE_ENV: development
    command: sh -c "npm install -g pnpm && pnpm install && pnpm dev"
    networks:
      - payload-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Demo PayloadCMS 2025 Application
  demo-payloadcms-2025:
    image: node:20-alpine
    container_name: demo-payloadcms-2025
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${DEMO_PAYLOADCMS_2025_APP_PORT:-3000}:3000"
    volumes:
      - ./apps/demo-payloadcms-2025:/app
      - demo_payloadcms_node_modules:/app/node_modules
      - demo_payloadcms_media:/app/public/media
    environment:
      PAYLOAD_SECRET: ${PAYLOAD_SECRET:-payload-cms-secret-key}
      DATABASE_URI: ${DATABASE_URI:-postgres://postgres:postgres-password@postgres:5432/payloadcms}
      NEXT_PUBLIC_SERVER_URL: ${NEXT_PUBLIC_SERVER_URL_DEMO_PAYLOADCMS_2025_APP:-http://localhost:3000}
      PREVIEW_SECRET: ${PREVIEW_SECRET:-payload-cms-preview-secret}
      NODE_ENV: development
    command: sh -c "npm install -g pnpm && pnpm install && pnpm dev"
    networks:
      - payload-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres-password}
      POSTGRES_DB: ${POSTGRES_DB:-payloadcms}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - payload-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Database
  mongo:
    image: mongo:6-jammy
    container_name: mongo-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-mongo}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-mongo-password}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-payloadcms}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - payload-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  payload-network:
    driver: bridge

volumes:
  postgres_data:
    name: payload-postgres-data
  payload_postgres_node_modules:
    name: payload-postgres-node-modules
  payload_postgres_media:
    name: payload-postgres-media
  payload_mongo_node_modules:
    name: payload-mongo-node-modules
  payload_mongo_media:
    name: payload-mongo-media
  mongo_data:
    name: payload-mongo-data
  demo_payloadcms_node_modules:
    name: demo-payloadcms-node-modules
  demo_payloadcms_media:
    name: demo-payloadcms-media
